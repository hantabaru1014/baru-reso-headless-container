// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: headless/v1/headless.proto

package headless

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccessLevel int32

const (
	AccessLevel_ACCESS_LEVEL_UNSPECIFIED      AccessLevel = 0
	AccessLevel_ACCESS_LEVEL_PRIVATE          AccessLevel = 1
	AccessLevel_ACCESS_LEVEL_LAN              AccessLevel = 2
	AccessLevel_ACCESS_LEVEL_CONTACTS         AccessLevel = 3
	AccessLevel_ACCESS_LEVEL_CONTACTS_PLUS    AccessLevel = 4
	AccessLevel_ACCESS_LEVEL_REGISTERED_USERS AccessLevel = 5
	AccessLevel_ACCESS_LEVEL_ANYONE           AccessLevel = 6
)

// Enum value maps for AccessLevel.
var (
	AccessLevel_name = map[int32]string{
		0: "ACCESS_LEVEL_UNSPECIFIED",
		1: "ACCESS_LEVEL_PRIVATE",
		2: "ACCESS_LEVEL_LAN",
		3: "ACCESS_LEVEL_CONTACTS",
		4: "ACCESS_LEVEL_CONTACTS_PLUS",
		5: "ACCESS_LEVEL_REGISTERED_USERS",
		6: "ACCESS_LEVEL_ANYONE",
	}
	AccessLevel_value = map[string]int32{
		"ACCESS_LEVEL_UNSPECIFIED":      0,
		"ACCESS_LEVEL_PRIVATE":          1,
		"ACCESS_LEVEL_LAN":              2,
		"ACCESS_LEVEL_CONTACTS":         3,
		"ACCESS_LEVEL_CONTACTS_PLUS":    4,
		"ACCESS_LEVEL_REGISTERED_USERS": 5,
		"ACCESS_LEVEL_ANYONE":           6,
	}
)

func (x AccessLevel) Enum() *AccessLevel {
	p := new(AccessLevel)
	*p = x
	return p
}

func (x AccessLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccessLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_headless_v1_headless_proto_enumTypes[0].Descriptor()
}

func (AccessLevel) Type() protoreflect.EnumType {
	return &file_headless_v1_headless_proto_enumTypes[0]
}

func (x AccessLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccessLevel.Descriptor instead.
func (AccessLevel) EnumDescriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{0}
}

type ShutdownRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShutdownRequest) Reset() {
	*x = ShutdownRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownRequest) ProtoMessage() {}

func (x *ShutdownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownRequest.ProtoReflect.Descriptor instead.
func (*ShutdownRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{0}
}

type ShutdownResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShutdownResponse) Reset() {
	*x = ShutdownResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownResponse) ProtoMessage() {}

func (x *ShutdownResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownResponse.ProtoReflect.Descriptor instead.
func (*ShutdownResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{1}
}

type ListSessionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSessionsRequest) Reset() {
	*x = ListSessionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsRequest) ProtoMessage() {}

func (x *ListSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsRequest.ProtoReflect.Descriptor instead.
func (*ListSessionsRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{2}
}

type ListSessionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sessions []*Session `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
}

func (x *ListSessionsResponse) Reset() {
	*x = ListSessionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsResponse) ProtoMessage() {}

func (x *ListSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsResponse.ProtoReflect.Descriptor instead.
func (*ListSessionsResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{3}
}

func (x *ListSessionsResponse) GetSessions() []*Session {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type StartWorldRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parameters *WorldStartupParameters `protobuf:"bytes,1,opt,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *StartWorldRequest) Reset() {
	*x = StartWorldRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartWorldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorldRequest) ProtoMessage() {}

func (x *StartWorldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorldRequest.ProtoReflect.Descriptor instead.
func (*StartWorldRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{4}
}

func (x *StartWorldRequest) GetParameters() *WorldStartupParameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type StartWorldResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenedSession *Session `protobuf:"bytes,1,opt,name=opened_session,json=openedSession,proto3" json:"opened_session,omitempty"`
}

func (x *StartWorldResponse) Reset() {
	*x = StartWorldResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartWorldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorldResponse) ProtoMessage() {}

func (x *StartWorldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorldResponse.ProtoReflect.Descriptor instead.
func (*StartWorldResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{5}
}

func (x *StartWorldResponse) GetOpenedSession() *Session {
	if x != nil {
		return x.OpenedSession
	}
	return nil
}

type StopSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *StopSessionRequest) Reset() {
	*x = StopSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSessionRequest) ProtoMessage() {}

func (x *StopSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSessionRequest.ProtoReflect.Descriptor instead.
func (*StopSessionRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{6}
}

func (x *StopSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type StopSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopSessionResponse) Reset() {
	*x = StopSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSessionResponse) ProtoMessage() {}

func (x *StopSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSessionResponse.ProtoReflect.Descriptor instead.
func (*StopSessionResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{7}
}

type InviteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Types that are assignable to User:
	//
	//	*InviteUserRequest_UserId
	//	*InviteUserRequest_UserName
	User isInviteUserRequest_User `protobuf_oneof:"user"`
}

func (x *InviteUserRequest) Reset() {
	*x = InviteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserRequest) ProtoMessage() {}

func (x *InviteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserRequest.ProtoReflect.Descriptor instead.
func (*InviteUserRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{8}
}

func (x *InviteUserRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (m *InviteUserRequest) GetUser() isInviteUserRequest_User {
	if m != nil {
		return m.User
	}
	return nil
}

func (x *InviteUserRequest) GetUserId() string {
	if x, ok := x.GetUser().(*InviteUserRequest_UserId); ok {
		return x.UserId
	}
	return ""
}

func (x *InviteUserRequest) GetUserName() string {
	if x, ok := x.GetUser().(*InviteUserRequest_UserName); ok {
		return x.UserName
	}
	return ""
}

type isInviteUserRequest_User interface {
	isInviteUserRequest_User()
}

type InviteUserRequest_UserId struct {
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof"`
}

type InviteUserRequest_UserName struct {
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3,oneof"`
}

func (*InviteUserRequest_UserId) isInviteUserRequest_User() {}

func (*InviteUserRequest_UserName) isInviteUserRequest_User() {}

type InviteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InviteUserResponse) Reset() {
	*x = InviteUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteUserResponse) ProtoMessage() {}

func (x *InviteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteUserResponse.ProtoReflect.Descriptor instead.
func (*InviteUserResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{9}
}

type UpdateUserRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	// Types that are assignable to User:
	//
	//	*UpdateUserRoleRequest_UserId
	//	*UpdateUserRoleRequest_UserName
	User isUpdateUserRoleRequest_User `protobuf_oneof:"user"`
	Role string                       `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *UpdateUserRoleRequest) Reset() {
	*x = UpdateUserRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRoleRequest) ProtoMessage() {}

func (x *UpdateUserRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRoleRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateUserRoleRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (m *UpdateUserRoleRequest) GetUser() isUpdateUserRoleRequest_User {
	if m != nil {
		return m.User
	}
	return nil
}

func (x *UpdateUserRoleRequest) GetUserId() string {
	if x, ok := x.GetUser().(*UpdateUserRoleRequest_UserId); ok {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserRoleRequest) GetUserName() string {
	if x, ok := x.GetUser().(*UpdateUserRoleRequest_UserName); ok {
		return x.UserName
	}
	return ""
}

func (x *UpdateUserRoleRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type isUpdateUserRoleRequest_User interface {
	isUpdateUserRoleRequest_User()
}

type UpdateUserRoleRequest_UserId struct {
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof"`
}

type UpdateUserRoleRequest_UserName struct {
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3,oneof"`
}

func (*UpdateUserRoleRequest_UserId) isUpdateUserRoleRequest_User() {}

func (*UpdateUserRoleRequest_UserName) isUpdateUserRoleRequest_User() {}

type UpdateUserRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 変更後のロール(無効なロールを指定した場合そのままの可能性)
	Role string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *UpdateUserRoleResponse) Reset() {
	*x = UpdateUserRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRoleResponse) ProtoMessage() {}

func (x *UpdateUserRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserRoleResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateUserRoleResponse) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type UpdateSessionParametersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId  string              `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Parameters []*SessionParameter `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *UpdateSessionParametersRequest) Reset() {
	*x = UpdateSessionParametersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSessionParametersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSessionParametersRequest) ProtoMessage() {}

func (x *UpdateSessionParametersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSessionParametersRequest.ProtoReflect.Descriptor instead.
func (*UpdateSessionParametersRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateSessionParametersRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UpdateSessionParametersRequest) GetParameters() []*SessionParameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type UpdateSessionParametersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSessionParametersResponse) Reset() {
	*x = UpdateSessionParametersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSessionParametersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSessionParametersResponse) ProtoMessage() {}

func (x *UpdateSessionParametersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSessionParametersResponse.ProtoReflect.Descriptor instead.
func (*UpdateSessionParametersResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{13}
}

type ListUsersInSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *ListUsersInSessionRequest) Reset() {
	*x = ListUsersInSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersInSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersInSessionRequest) ProtoMessage() {}

func (x *ListUsersInSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersInSessionRequest.ProtoReflect.Descriptor instead.
func (*ListUsersInSessionRequest) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{14}
}

func (x *ListUsersInSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type ListUsersInSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*UserInSession `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *ListUsersInSessionResponse) Reset() {
	*x = ListUsersInSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersInSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersInSessionResponse) ProtoMessage() {}

func (x *ListUsersInSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersInSessionResponse.ProtoReflect.Descriptor instead.
func (*ListUsersInSessionResponse) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{15}
}

func (x *ListUsersInSessionResponse) GetUsers() []*UserInSession {
	if x != nil {
		return x.Users
	}
	return nil
}

type UserInSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Role      string `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	IsPresent bool   `protobuf:"varint,4,opt,name=is_present,json=isPresent,proto3" json:"is_present,omitempty"`
}

func (x *UserInSession) Reset() {
	*x = UserInSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInSession) ProtoMessage() {}

func (x *UserInSession) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInSession.ProtoReflect.Descriptor instead.
func (*UserInSession) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{16}
}

func (x *UserInSession) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserInSession) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInSession) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UserInSession) GetIsPresent() bool {
	if x != nil {
		return x.IsPresent
	}
	return false
}

type Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description       string                  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	AccessLevel       AccessLevel             `protobuf:"varint,4,opt,name=access_level,json=accessLevel,proto3,enum=headless.v1.AccessLevel" json:"access_level,omitempty"`
	ThumbnailUrl      *string                 `protobuf:"bytes,5,opt,name=thumbnail_url,json=thumbnailUrl,proto3,oneof" json:"thumbnail_url,omitempty"`
	StartupParameters *WorldStartupParameters `protobuf:"bytes,6,opt,name=startup_parameters,json=startupParameters,proto3" json:"startup_parameters,omitempty"`
}

func (x *Session) Reset() {
	*x = Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{17}
}

func (x *Session) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Session) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Session) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Session) GetAccessLevel() AccessLevel {
	if x != nil {
		return x.AccessLevel
	}
	return AccessLevel_ACCESS_LEVEL_UNSPECIFIED
}

func (x *Session) GetThumbnailUrl() string {
	if x != nil && x.ThumbnailUrl != nil {
		return *x.ThumbnailUrl
	}
	return ""
}

func (x *Session) GetStartupParameters() *WorldStartupParameters {
	if x != nil {
		return x.StartupParameters
	}
	return nil
}

type WorldStartupParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionName     *string     `protobuf:"bytes,1,opt,name=session_name,json=sessionName,proto3,oneof" json:"session_name,omitempty"`
	CustomSessionId *string     `protobuf:"bytes,2,opt,name=custom_session_id,json=customSessionId,proto3,oneof" json:"custom_session_id,omitempty"`
	Description     *string     `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	MaxUsers        int32       `protobuf:"varint,4,opt,name=max_users,json=maxUsers,proto3" json:"max_users,omitempty"`
	AccessLevel     AccessLevel `protobuf:"varint,5,opt,name=access_level,json=accessLevel,proto3,enum=headless.v1.AccessLevel" json:"access_level,omitempty"`
	// Types that are assignable to LoadWorld:
	//
	//	*WorldStartupParameters_LoadWorldUrl
	//	*WorldStartupParameters_LoadWorldPresetName
	LoadWorld           isWorldStartupParameters_LoadWorld `protobuf_oneof:"load_world"`
	AutoInviteUsernames []string                           `protobuf:"bytes,8,rep,name=auto_invite_usernames,json=autoInviteUsernames,proto3" json:"auto_invite_usernames,omitempty"`
}

func (x *WorldStartupParameters) Reset() {
	*x = WorldStartupParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorldStartupParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldStartupParameters) ProtoMessage() {}

func (x *WorldStartupParameters) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldStartupParameters.ProtoReflect.Descriptor instead.
func (*WorldStartupParameters) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{18}
}

func (x *WorldStartupParameters) GetSessionName() string {
	if x != nil && x.SessionName != nil {
		return *x.SessionName
	}
	return ""
}

func (x *WorldStartupParameters) GetCustomSessionId() string {
	if x != nil && x.CustomSessionId != nil {
		return *x.CustomSessionId
	}
	return ""
}

func (x *WorldStartupParameters) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *WorldStartupParameters) GetMaxUsers() int32 {
	if x != nil {
		return x.MaxUsers
	}
	return 0
}

func (x *WorldStartupParameters) GetAccessLevel() AccessLevel {
	if x != nil {
		return x.AccessLevel
	}
	return AccessLevel_ACCESS_LEVEL_UNSPECIFIED
}

func (m *WorldStartupParameters) GetLoadWorld() isWorldStartupParameters_LoadWorld {
	if m != nil {
		return m.LoadWorld
	}
	return nil
}

func (x *WorldStartupParameters) GetLoadWorldUrl() string {
	if x, ok := x.GetLoadWorld().(*WorldStartupParameters_LoadWorldUrl); ok {
		return x.LoadWorldUrl
	}
	return ""
}

func (x *WorldStartupParameters) GetLoadWorldPresetName() string {
	if x, ok := x.GetLoadWorld().(*WorldStartupParameters_LoadWorldPresetName); ok {
		return x.LoadWorldPresetName
	}
	return ""
}

func (x *WorldStartupParameters) GetAutoInviteUsernames() []string {
	if x != nil {
		return x.AutoInviteUsernames
	}
	return nil
}

type isWorldStartupParameters_LoadWorld interface {
	isWorldStartupParameters_LoadWorld()
}

type WorldStartupParameters_LoadWorldUrl struct {
	LoadWorldUrl string `protobuf:"bytes,6,opt,name=load_world_url,json=loadWorldUrl,proto3,oneof"`
}

type WorldStartupParameters_LoadWorldPresetName struct {
	LoadWorldPresetName string `protobuf:"bytes,7,opt,name=load_world_preset_name,json=loadWorldPresetName,proto3,oneof"`
}

func (*WorldStartupParameters_LoadWorldUrl) isWorldStartupParameters_LoadWorld() {}

func (*WorldStartupParameters_LoadWorldPresetName) isWorldStartupParameters_LoadWorld() {}

type SessionParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Param:
	//
	//	*SessionParameter_SessionName
	//	*SessionParameter_Description
	//	*SessionParameter_MaxUsers
	//	*SessionParameter_AccessLevel
	Param isSessionParameter_Param `protobuf_oneof:"param"`
}

func (x *SessionParameter) Reset() {
	*x = SessionParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headless_v1_headless_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionParameter) ProtoMessage() {}

func (x *SessionParameter) ProtoReflect() protoreflect.Message {
	mi := &file_headless_v1_headless_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionParameter.ProtoReflect.Descriptor instead.
func (*SessionParameter) Descriptor() ([]byte, []int) {
	return file_headless_v1_headless_proto_rawDescGZIP(), []int{19}
}

func (m *SessionParameter) GetParam() isSessionParameter_Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (x *SessionParameter) GetSessionName() string {
	if x, ok := x.GetParam().(*SessionParameter_SessionName); ok {
		return x.SessionName
	}
	return ""
}

func (x *SessionParameter) GetDescription() string {
	if x, ok := x.GetParam().(*SessionParameter_Description); ok {
		return x.Description
	}
	return ""
}

func (x *SessionParameter) GetMaxUsers() int32 {
	if x, ok := x.GetParam().(*SessionParameter_MaxUsers); ok {
		return x.MaxUsers
	}
	return 0
}

func (x *SessionParameter) GetAccessLevel() AccessLevel {
	if x, ok := x.GetParam().(*SessionParameter_AccessLevel); ok {
		return x.AccessLevel
	}
	return AccessLevel_ACCESS_LEVEL_UNSPECIFIED
}

type isSessionParameter_Param interface {
	isSessionParameter_Param()
}

type SessionParameter_SessionName struct {
	SessionName string `protobuf:"bytes,1,opt,name=session_name,json=sessionName,proto3,oneof"`
}

type SessionParameter_Description struct {
	Description string `protobuf:"bytes,2,opt,name=description,proto3,oneof"`
}

type SessionParameter_MaxUsers struct {
	MaxUsers int32 `protobuf:"varint,3,opt,name=max_users,json=maxUsers,proto3,oneof"`
}

type SessionParameter_AccessLevel struct {
	AccessLevel AccessLevel `protobuf:"varint,4,opt,name=access_level,json=accessLevel,proto3,enum=headless.v1.AccessLevel,oneof"`
}

func (*SessionParameter_SessionName) isSessionParameter_Param() {}

func (*SessionParameter_Description) isSessionParameter_Param() {}

func (*SessionParameter_MaxUsers) isSessionParameter_Param() {}

func (*SessionParameter_AccessLevel) isSessionParameter_Param() {}

var File_headless_v1_headless_proto protoreflect.FileDescriptor

var file_headless_v1_headless_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x65,
	0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x68, 0x65,
	0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x68, 0x75,
	0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10,
	0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x30, 0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x58, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x65, 0x61,
	0x64, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x75, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0x51, 0x0a, 0x12, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x65, 0x61, 0x64,
	0x6c, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x33,
	0x0a, 0x12, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x74, 0x0a, 0x11, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x22, 0x14, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x42, 0x06, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x2c, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x22, 0x7e, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c,
	0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x22, 0x21, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x49, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x4e, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49,
	0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x22, 0x66, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x22, 0x9c, 0x02, 0x0a, 0x07, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x0d, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x52, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f,
	0x72, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0xca, 0x03, 0x0a, 0x16, 0x57, 0x6f,
	0x72, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65,
	0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26,
	0x0a, 0x0e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x6f,
	0x72, 0x6c, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x16, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x13, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x6f,
	0x72, 0x6c, 0x64, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a,
	0x15, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x61, 0x75,
	0x74, 0x6f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc2, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0c, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x68, 0x65, 0x61, 0x64,
	0x6c, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2a, 0xd2, 0x01, 0x0a, 0x0b,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x18, 0x41,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54,
	0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x4c, 0x45,
	0x56, 0x45, 0x4c, 0x5f, 0x4c, 0x41, 0x4e, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43,
	0x54, 0x53, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x4c,
	0x45, 0x56, 0x45, 0x4c, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x53, 0x5f, 0x50, 0x4c,
	0x55, 0x53, 0x10, 0x04, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x4c,
	0x45, 0x56, 0x45, 0x4c, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x53, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x41, 0x4e, 0x59, 0x4f, 0x4e, 0x45, 0x10, 0x06,
	0x32, 0xde, 0x05, 0x0a, 0x16, 0x48, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x53,
	0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x1c, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65,
	0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x12, 0x1e, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65,
	0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65,
	0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65,
	0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c,
	0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c,
	0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c,
	0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x68, 0x65,
	0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x2b, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x68,
	0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x12, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x26, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x6c,
	0x65, 0x73, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x49, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x55, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x68, 0x61, 0x6e, 0x74, 0x61, 0x62, 0x61, 0x72, 0x75, 0x31, 0x30, 0x31, 0x34, 0x2f, 0x62, 0x61,
	0x72, 0x75, 0x2d, 0x72, 0x65, 0x73, 0x6f, 0x2d, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73,
	0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x65, 0x73, 0x73, 0xaa, 0x02, 0x0c, 0x48, 0x65, 0x61, 0x64,
	0x6c, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_headless_v1_headless_proto_rawDescOnce sync.Once
	file_headless_v1_headless_proto_rawDescData = file_headless_v1_headless_proto_rawDesc
)

func file_headless_v1_headless_proto_rawDescGZIP() []byte {
	file_headless_v1_headless_proto_rawDescOnce.Do(func() {
		file_headless_v1_headless_proto_rawDescData = protoimpl.X.CompressGZIP(file_headless_v1_headless_proto_rawDescData)
	})
	return file_headless_v1_headless_proto_rawDescData
}

var file_headless_v1_headless_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_headless_v1_headless_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_headless_v1_headless_proto_goTypes = []any{
	(AccessLevel)(0),                        // 0: headless.v1.AccessLevel
	(*ShutdownRequest)(nil),                 // 1: headless.v1.ShutdownRequest
	(*ShutdownResponse)(nil),                // 2: headless.v1.ShutdownResponse
	(*ListSessionsRequest)(nil),             // 3: headless.v1.ListSessionsRequest
	(*ListSessionsResponse)(nil),            // 4: headless.v1.ListSessionsResponse
	(*StartWorldRequest)(nil),               // 5: headless.v1.StartWorldRequest
	(*StartWorldResponse)(nil),              // 6: headless.v1.StartWorldResponse
	(*StopSessionRequest)(nil),              // 7: headless.v1.StopSessionRequest
	(*StopSessionResponse)(nil),             // 8: headless.v1.StopSessionResponse
	(*InviteUserRequest)(nil),               // 9: headless.v1.InviteUserRequest
	(*InviteUserResponse)(nil),              // 10: headless.v1.InviteUserResponse
	(*UpdateUserRoleRequest)(nil),           // 11: headless.v1.UpdateUserRoleRequest
	(*UpdateUserRoleResponse)(nil),          // 12: headless.v1.UpdateUserRoleResponse
	(*UpdateSessionParametersRequest)(nil),  // 13: headless.v1.UpdateSessionParametersRequest
	(*UpdateSessionParametersResponse)(nil), // 14: headless.v1.UpdateSessionParametersResponse
	(*ListUsersInSessionRequest)(nil),       // 15: headless.v1.ListUsersInSessionRequest
	(*ListUsersInSessionResponse)(nil),      // 16: headless.v1.ListUsersInSessionResponse
	(*UserInSession)(nil),                   // 17: headless.v1.UserInSession
	(*Session)(nil),                         // 18: headless.v1.Session
	(*WorldStartupParameters)(nil),          // 19: headless.v1.WorldStartupParameters
	(*SessionParameter)(nil),                // 20: headless.v1.SessionParameter
}
var file_headless_v1_headless_proto_depIdxs = []int32{
	18, // 0: headless.v1.ListSessionsResponse.sessions:type_name -> headless.v1.Session
	19, // 1: headless.v1.StartWorldRequest.parameters:type_name -> headless.v1.WorldStartupParameters
	18, // 2: headless.v1.StartWorldResponse.opened_session:type_name -> headless.v1.Session
	20, // 3: headless.v1.UpdateSessionParametersRequest.parameters:type_name -> headless.v1.SessionParameter
	17, // 4: headless.v1.ListUsersInSessionResponse.users:type_name -> headless.v1.UserInSession
	0,  // 5: headless.v1.Session.access_level:type_name -> headless.v1.AccessLevel
	19, // 6: headless.v1.Session.startup_parameters:type_name -> headless.v1.WorldStartupParameters
	0,  // 7: headless.v1.WorldStartupParameters.access_level:type_name -> headless.v1.AccessLevel
	0,  // 8: headless.v1.SessionParameter.access_level:type_name -> headless.v1.AccessLevel
	1,  // 9: headless.v1.HeadlessControlService.Shutdown:input_type -> headless.v1.ShutdownRequest
	3,  // 10: headless.v1.HeadlessControlService.ListSessions:input_type -> headless.v1.ListSessionsRequest
	5,  // 11: headless.v1.HeadlessControlService.StartWorld:input_type -> headless.v1.StartWorldRequest
	7,  // 12: headless.v1.HeadlessControlService.StopSession:input_type -> headless.v1.StopSessionRequest
	9,  // 13: headless.v1.HeadlessControlService.InviteUser:input_type -> headless.v1.InviteUserRequest
	11, // 14: headless.v1.HeadlessControlService.UpdateUserRole:input_type -> headless.v1.UpdateUserRoleRequest
	13, // 15: headless.v1.HeadlessControlService.UpdateSessionParameters:input_type -> headless.v1.UpdateSessionParametersRequest
	15, // 16: headless.v1.HeadlessControlService.ListUsersInSession:input_type -> headless.v1.ListUsersInSessionRequest
	2,  // 17: headless.v1.HeadlessControlService.Shutdown:output_type -> headless.v1.ShutdownResponse
	4,  // 18: headless.v1.HeadlessControlService.ListSessions:output_type -> headless.v1.ListSessionsResponse
	6,  // 19: headless.v1.HeadlessControlService.StartWorld:output_type -> headless.v1.StartWorldResponse
	8,  // 20: headless.v1.HeadlessControlService.StopSession:output_type -> headless.v1.StopSessionResponse
	10, // 21: headless.v1.HeadlessControlService.InviteUser:output_type -> headless.v1.InviteUserResponse
	12, // 22: headless.v1.HeadlessControlService.UpdateUserRole:output_type -> headless.v1.UpdateUserRoleResponse
	14, // 23: headless.v1.HeadlessControlService.UpdateSessionParameters:output_type -> headless.v1.UpdateSessionParametersResponse
	16, // 24: headless.v1.HeadlessControlService.ListUsersInSession:output_type -> headless.v1.ListUsersInSessionResponse
	17, // [17:25] is the sub-list for method output_type
	9,  // [9:17] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_headless_v1_headless_proto_init() }
func file_headless_v1_headless_proto_init() {
	if File_headless_v1_headless_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_headless_v1_headless_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ShutdownRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ShutdownResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListSessionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ListSessionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*StartWorldRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*StartWorldResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*StopSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*StopSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*InviteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*InviteUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSessionParametersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSessionParametersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ListUsersInSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ListUsersInSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UserInSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*WorldStartupParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headless_v1_headless_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*SessionParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_headless_v1_headless_proto_msgTypes[8].OneofWrappers = []any{
		(*InviteUserRequest_UserId)(nil),
		(*InviteUserRequest_UserName)(nil),
	}
	file_headless_v1_headless_proto_msgTypes[10].OneofWrappers = []any{
		(*UpdateUserRoleRequest_UserId)(nil),
		(*UpdateUserRoleRequest_UserName)(nil),
	}
	file_headless_v1_headless_proto_msgTypes[17].OneofWrappers = []any{}
	file_headless_v1_headless_proto_msgTypes[18].OneofWrappers = []any{
		(*WorldStartupParameters_LoadWorldUrl)(nil),
		(*WorldStartupParameters_LoadWorldPresetName)(nil),
	}
	file_headless_v1_headless_proto_msgTypes[19].OneofWrappers = []any{
		(*SessionParameter_SessionName)(nil),
		(*SessionParameter_Description)(nil),
		(*SessionParameter_MaxUsers)(nil),
		(*SessionParameter_AccessLevel)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_headless_v1_headless_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_headless_v1_headless_proto_goTypes,
		DependencyIndexes: file_headless_v1_headless_proto_depIdxs,
		EnumInfos:         file_headless_v1_headless_proto_enumTypes,
		MessageInfos:      file_headless_v1_headless_proto_msgTypes,
	}.Build()
	File_headless_v1_headless_proto = out.File
	file_headless_v1_headless_proto_rawDesc = nil
	file_headless_v1_headless_proto_goTypes = nil
	file_headless_v1_headless_proto_depIdxs = nil
}
