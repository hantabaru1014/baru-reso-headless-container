name: Build and Push Docker Image

on:
  workflow_dispatch:
    inputs:
      resonite_branch:
        type: choice
        required: false
        description: "Resonite branch(beta)"
        default: "headless"
        options:
          - "headless"
          - "prerelease"
      git_branch:
        type: string
        required: false
        description: "Source git branch"
        default: "main"
  # push:
  #   branches: [ "main" ]

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.git_branch }}

      - name: Download Resonite
        env:
          STEAM_USERNAME: ${{ secrets.STEAM_USERNAME }}
          STEAM_PASSWORD: ${{ secrets.STEAM_PASSWORD }}
          HEADLESS_PASSWORD: ${{ secrets.HEADLESS_PASSWORD }}
        run: |
          if [ "${{ github.event.inputs.resonite_branch }}" == "prerelease" ]; then
            USE_PRERELEASE=true bash ${GITHUB_WORKSPACE}/scripts/download-resonite.sh
          elif [ "${{ github.event.inputs.resonite_branch }}" == "headless" ]; then
            bash ${GITHUB_WORKSPACE}/scripts/download-resonite.sh
          fi

      - name: Read Versions
        run: |
          RESO_VERSION=$(cat ./Resonite/Build.version)
          echo "RESONITE_VERSION=$RESO_VERSION" >> $GITHUB_ENV
          APP_VERSION=$(cat ./Headless/AppVersion)
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        if: github.event.inputs.resonite_branch == 'headless'
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.IMAGE_NAME }}:latest, ghcr.io/${{ env.IMAGE_NAME }}:${{ env.RESONITE_VERSION }}-v${{ env.APP_VERSION }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push Docker image (prerelease)
        uses: docker/build-push-action@v6
        if: github.event.inputs.resonite_branch == 'prerelease'
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.IMAGE_NAME }}:prerelease, ghcr.io/${{ env.IMAGE_NAME }}:prerelease-${{ env.RESONITE_VERSION }}-v${{ env.APP_VERSION }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
