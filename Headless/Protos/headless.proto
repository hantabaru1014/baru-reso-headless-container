syntax = "proto3";

option csharp_namespace = "Headless.Rpc";

package headless;

service HeadlessControl {
  rpc Shutdown (ShutdownRequest) returns (ShutdownReply);
  rpc ListSessions (ListSessionsRequest) returns (ListSessionsReply);
  rpc StartWorld (StartWorldRequest) returns (StartWorldReply);
  rpc StopSession (StopSessionRequest) returns (StopSessionReply);
  rpc InviteUser (InviteUserRequest) returns (InviteUserReply);
}

message ShutdownRequest {
}

message ShutdownReply {
}

message ListSessionsRequest {
}

message ListSessionsReply {
  repeated Session sessions = 1;
}

message StartWorldRequest {
  WorldStartupParameters parameters = 1;
}

message StartWorldReply {
  Session opened_session = 1;
}

message StopSessionRequest {
  string session_id = 1;
}

message StopSessionReply {
}

message InviteUserRequest {
  string session_id = 1;
  oneof user {
    string user_id = 2;
    string user_name = 3;
  }
}

message InviteUserReply {
}

// models

message User {
  string id = 1;
  string name = 2;
}

enum AccessLevel {
  Unknown = 0;
  Private = 1;
  LAN = 2;
  Contacts = 3;
  ContactsPlus = 4;
  RegisteredUsers = 5;
  Anyone = 6;
}

message Session {
  string id = 1;
  string name = 2;
  string description = 3;
  AccessLevel access_level = 4;
  repeated User users = 5;
  string thumbnail_url = 6;
  WorldStartupParameters startup_parameters = 7;
}

message WorldStartupParameters {
  optional string session_name = 1;
  optional string custom_session_id = 2;
  optional string description = 3;
  int32 max_users = 4;
  AccessLevel access_level = 5;
  oneof load_world {
    string load_world_url = 6;
    string load_world_preset_name = 7;
  }
  repeated string auto_invite_usernames = 8;
}
